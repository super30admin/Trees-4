# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':
        if not root: 
            return None
        if p == q: 
            return p
        if p == root or q == root: 
            return root
        l = self.lowestCommonAncestor(root.left, p, q)
        r = self.lowestCommonAncestor(root.right, p, q)
        if l and r: 
            return root
        if l: 
            return l
        return r 
    
# Time Complexity: O(n)
# Space Complexity: O(1)
# Successfully implemented on Leetcode
