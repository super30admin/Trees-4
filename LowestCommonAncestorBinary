/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
/*
Appraoch:
- Return node value if equal to p/q else retun null 
Time: O(N)
Space: O(maxDepth)
*/
class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {

        if(root == null){
            return null;
        }
        
        //base case
        if(root.val == p.val || root.val == q.val){
            return root;
        }
        
        TreeNode left = lowestCommonAncestor(root.left, p, q);
        TreeNode right = lowestCommonAncestor(root.right, p, q);
        
        
        if(left != null && right != null) {
            return root;
        } else if(left != null){
            return left;
        } else {
            return right;
        }
        
    }
}
