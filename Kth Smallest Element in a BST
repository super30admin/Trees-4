# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def kthSmallest(self, root: Optional[TreeNode], k: int) -> int:
        c = 0
        while root:
            if root.left:
                a = root.left
                while a.right and a.right != root:
                    a = a.right
                if not a.right:
                    a.right = root
                    root = root.left
                else:
                    c += 1
                    if c == k:
                        return root.val
                    a.right = None
                    root = root.right
            else:
                c += 1
                if c == k:
                    return root.val
                root = root.right
        
        return None
    
# Time Complexity: O(n)
# Space Complexity: O(1)
# Successfully implemented on Leetcode
