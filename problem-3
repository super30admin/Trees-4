/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    List<TreeNode> plist;
    List<TreeNode> qlist;
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        
        helper(root,p, q,new ArrayList<>());
     
    
        

        for(int i=0;i<plist.size();i++){
            if(plist.get(i)!=qlist.get(i)){
                 return plist.get(i-1);
            }
        }
        return null;
        
    }
    public void helper(TreeNode root, TreeNode p,TreeNode q,List path){
        if(root==null){
            return;
        }
        if(root==p){
            plist=new ArrayList<>(path);
            plist.add(root);
            plist.add(root);
     
        }
        if(root==q){
            qlist=new ArrayList<>(path);
            qlist.add(root);
            qlist.add(root);
      
        }
        path.add(root);
        helper(root.left,p,q,path);
        helper(root.right,p,q,path);
        path.remove(path.size()-1);
        
    }
}
