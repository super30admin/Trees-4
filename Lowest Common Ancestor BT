//TC:- O(n)
//SC:- O(n) --Recursion stack

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        
        if(root == null)
        {
            return null;
        }
        
        if(root.val == p.val || root.val == q.val)
        {
            return root;
        }
        
        TreeNode leftResult = lowestCommonAncestor(root.left, p, q);
        TreeNode rightResult = lowestCommonAncestor(root.right, p, q);

        if(leftResult != null && rightResult != null)
        {
            return root;
        }
        
        if(leftResult != null)
        {
            return leftResult;
        }
        
        else
            return rightResult;
        
    }
}
