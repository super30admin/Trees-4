Time complexity: O(m + n) m-> no. of nodes and n-> no. of edges
Space complexity: O(maxDepth)
Did this code successfully submitted on leetcode: Yes


/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        
        if(root==null)
            return root;
        
        if(p.val<root.val && q.val<root.val)
            return lowestCommonAncestor(root.left,p,q);
        else if(p.val>root.val && q.val>root.val)
            return lowestCommonAncestor(root.right,p,q);
        else
            return root;

    }
}
