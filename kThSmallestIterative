/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int kthSmallest(TreeNode root, int k) {

        //230. Kth Smallest Element in a BST
        //Iterative solution
        //Time complexity : O(n)
        //Space : O(height of the tree)
        
        Stack<TreeNode> st = new Stack<>();
        while(!st.isEmpty() || root!=null){
            while(root!=null){
                st.push(root);
                root = root.left;
            }
            root = st.pop();
            k--;
            if(k == 0)
                return root.val;
            root = root.right;
        }
        return -1;
        
    }
}